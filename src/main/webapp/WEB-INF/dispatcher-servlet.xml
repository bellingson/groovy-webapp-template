<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<context:component-scan base-package="com.myapp.controllers"/>
	<context:component-scan base-package="com.myapp.services"/>
	<context:component-scan base-package="com.myapp.model"/>

   <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
      <property name="interceptors">
         <list>
<!--            <ref bean="openSessionViewInterceptor" /> -->
         </list>
      </property>
   </bean>
    <!--
        - This bean processes annotated handler methods, applying PetClinic-specific PropertyEditors
        - for request parameter binding. It overrides the default AnnotationMethodHandlerAdapter.

    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="webBindingInitializer">
            <bean class="org.grails.samples.web.ClinicBindingInitializer"/>
        </property>
    </bean>
    -->

    <!--
        - This bean resolves specific types of exceptions to corresponding logical
        - view names for error views. The default behaviour of DispatcherServlet
        - is to propagate all exceptions to the servlet container: this will happen
        - here with all other types of exceptions.
    -->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="org.springframework.dao.DataAccessException">dataAccessFailure</prop>
                <prop key="org.springframework.transaction.TransactionException">dataAccessFailure</prop>
            </props>
        </property>
    </bean>

    <!--
        - This bean configures the 'prefix' and 'suffix' properties of
        - InternalResourceViewResolver, which resolves logical view names
        - returned by Controllers. For example, a logical view name of "vets"
        - will be mapped to "/WEB-INF/jsp/vets.jsp".
    -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp"/>
    </bean>

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

        <!-- one of the properties available; the maximum file size in bytes -->
        <!-- <property name="maxUploadSize" value="20240000"/> -->
        <property name="maxUploadSize" value="2165820890"/>

    </bean>

<!--
    <bean id="openSessionViewInterceptor" class="org.springframework.orm.hibernate3.support.OpenSessionInViewInterceptor">
      <property name="sessionFactory" ref="sessionFactory" />
    </bean>
-->

</beans>